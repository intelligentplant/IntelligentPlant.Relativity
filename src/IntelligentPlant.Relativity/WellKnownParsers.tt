<#@ template debug="false" hostspecific="true" language="C#" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ output extension=".generated.cs" #>
// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
//
//     Modify the WellKnownParsers.csv file to change the default parsers.
// </auto-generated>
// ------------------------------------------------------------------------------

using System.Collections.Generic;
using System.Globalization;

namespace IntelligentPlant.Relativity {

    internal static class WellKnownParsers {

        internal static IEnumerable<RelativityParserConfiguration> GetParserDefinitions() {

<#
var sourceFile = this.Host.ResolvePath(@"WellKnownParsers.csv");

using (var reader = new System.IO.StreamReader(sourceFile)) {
    while (!reader.EndOfStream) {
        // Skip initial comments.
        var row = reader.ReadLine();
        if (string.IsNullOrWhiteSpace(row) || row.StartsWith("#", StringComparison.Ordinal)) {
            continue;
        }

        // We've just read the header.
        break;
    }

    while (!reader.EndOfStream) {
        var row = reader.ReadLine();
        if (string.IsNullOrWhiteSpace(row) || row.StartsWith("#", StringComparison.Ordinal)) {
            continue;
        }

        var settings = row.Split(',');
        // Row should be 17 columns long:
        // - culture
        // - base time: current time
        // - base time: start of current second
        // - base time: start of current minute
        // - base time: start of current hour
        // - base time: start of current day
        // - base time: start of current week
        // - base time: start of current month
        // - base time: start of current year
        // - time offset: milliseconds
        // - time offset: seconds
        // - time offset: minutes
        // - time offset: hours
        // - time offset: days
        // - time offset: weeks
        // - time offset: months
        // - time offset: years
        if (settings.Length != 17) {
            continue;
        }
#>
            yield return new RelativityParserConfiguration() {
                CultureInfo = CultureInfo.GetCultureInfo("<#= settings[0] #>"),
                BaseTimeSettings = new RelativityBaseTimeSettings(
                    now: "<#= settings[1] #>",
                    currentSecond: "<#= settings[2] #>",
                    currentMinute: "<#= settings[3] #>",
                    currentHour: "<#= settings[4] #>",
                    currentDay: "<#= settings[5] #>",
                    currentWeek: "<#= settings[6] #>",
                    currentMonth: "<#= settings[7] #>",
                    currentYear: "<#= settings[8] #>"
                ),
                TimeOffsetSettings = new RelativityTimeOffsetSettings(
                    milliseconds: "<#= settings[9] #>",
                    seconds: "<#= settings[10] #>",
                    minutes: "<#= settings[11] #>",
                    hours: "<#= settings[12] #>",
                    days: "<#= settings[13] #>",
                    weeks: "<#= settings[14] #>",
                    months: "<#= settings[15] #>",
                    years: "<#= settings[16] #>"
                )
            };
            
<#
    }
}
#>
        }
    }
}
